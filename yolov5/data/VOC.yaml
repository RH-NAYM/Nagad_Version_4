
test: dataset/test/images
train: dataset/train/images
val: dataset/valid/images

names:
  0 : bkash_board_back_lit_1_with_image
  1 : bkash_festoon_bill_pay
  2 : bkash_festoon_digital
  3 : bkash_festoon_price
  4 : bkash_festoon_qr
  5 : bkash_festoon_remittance
  6 : bkash_festoon_savings
  7 : bkash_hanger_push-pull_door
  8 : bkash_hanging_board_open-close
  9 : bkash_pos_pointer_back_led
  10 : bkash_poster_islamic
  11 : bkash_poster_mobile_recharge
  12 : bkash_poster_remittance
  13 : bkash_poster_savings
  14 : bkash_poster_send_money
  15 : bkash_poster_table_messi
  16 : bkash_poster_western_union
  17 : bkash_shop_banner_price
  18 : bkash_sticker_bill_pay_table
  19 : bkash_sticker_fraud_awareness
  20 : bkash_sticker_mask_bangla
  21 : bkash_sticker_mask_english
  22 : bkash_sticker_payment_dai_cut
  23 : bkash_sticker_payment_large
  24 : bkash_sticker_payment_running
  25 : bkash_sticker_price
  26 : bkash_sticker_push-pull_door
  27 : bkash_sticker_qr_code
  28 : bkash_sticker_qr_vertical_1
  29 : bkash_sticker_running
  30 : bkash_sticker_shutter
  31 : bkash_sticker_table
  32 : bkash_sticker_transaction
  33 : bkash_table_top_qr_pvc_dai_cut
  34 : bkash_table_top_qr_pvc_running
  35 : bkash_table_top_qr_smart
  36 : nagad_back_lit_2
  37 : nagad_board_back_lit_1_with_picture
  38 : nagad_board_open_close_pvc
  39 : nagad_festoon_bmet
  40 : nagad_festoon_indian_visa
  41 : nagad_festoon_islamic
  42 : nagad_festoon_lenden_1
  43 : nagad_festoon_lenden_2
  44 : nagad_festoon_nagad_sheba
  45 : nagad_festoon_price_1
  46 : nagad_festoon_price_2
  47 : nagad_festoon_remittance
  48 : nagad_festoon_send_money
  49 : nagad_hanging_display
  50 : nagad_identifier_nagad
  51 : nagad_ms_standee
  52 : nagad_poster_fraud_awareness_1
  53 : nagad_poster_fraud_awareness_2
  54 : nagad_poster_islamic
  55 : nagad_poster_mobile_recharge
  56 : nagad_poster_remittance_2
  57 : nagad_shop_banner_customized
  58 : nagad_shop_banner_lenden
  59 : nagad_shop_banner_nagad_sheba
  60 : nagad_shop_banner_price_1
  61 : nagad_shop_banner_price_2
  62 : nagad_sticker_customized_table
  63 : nagad_sticker_fraud_awareness
  64 : nagad_sticker_hotline
  65 : nagad_sticker_hotline_file_folder
  66 : nagad_sticker_payment
  67 : nagad_sticker_payment_accepted_here
  68 : nagad_sticker_push_pull_door
  69 : nagad_sticker_qr_code
  70 : nagad_sticker_qr_horizontal_new
  71 : nagad_sticker_qr_horizontal_old
  72 : nagad_sticker_qr_vertical
  73 : nagad_sticker_remittance_1_large
  74 : nagad_sticker_remittance_2
  75 : nagad_sticker_running
  76 : nagad_sticker_shutter
  77 : nagad_sticker_table_1
  78 : nagad_sticker_table_2
  79 : nagad_sticker_table_3
  80 : nagad_table_talker
  81 : nagad_table_top_qr_pvc
  82 : nagad_table_top_qr_wooden_base_new
  83 : nagad_table_top_qr_wooden_base_old
  84 : nagad_x_banner
  85 : rocket_festoon_bill_pay
  86 : rocket_festoon_lenden
  87 : rocket_festoon_price
  88 : rocket_festoon_send_money
  89 : rocket_poster_add_money
  90 : rocket_poster_isnsurance
  91 : rocket_shop_banner_bill_pay
  92 : rocket_shop_banner_lenden
  93 : rocket_shop_banner_price
  94 : rocket_shop_banner_send_money
  95 : rocket_sticker_qr_code
  96 : rocket_sticker_running
  97 : rocket_sticker_shutter
  98 : rocket_sticker_table
  99 : rocket_sticker_table_price
  100 : rocket_table_top_qr_1_pvc
  101 : tap_table_top_qr
  102 : upay_festoon_price
  103 : upay_festoon_traffic_1
  104 : upay_festoon_traffic_2
  105 : upay_poster_lenden
  106 : upay_shop_banner
  107 : upay_sticker_qr_code_1
  108 : upay_sticker_qr_code_2
  109 : upay_sticker_shutter
  110 : upay_table_top_qr_pvc



# Download script/URL (optional) ---------------------------------------------------------------------------------------
download: |
  import xml.etree.ElementTree as ET

  from tqdm import tqdm
  from utils.general import download, Path


  def convert_label(path, lb_path, year, image_id):
      def convert_box(size, box):
          dw, dh = 1. / size[0], 1. / size[1]
          x, y, w, h = (box[0] + box[1]) / 2.0 - 1, (box[2] + box[3]) / 2.0 - 1, box[1] - box[0], box[3] - box[2]
          return x * dw, y * dh, w * dw, h * dh

      in_file = open(path / f'VOC{year}/Annotations/{image_id}.xml')
      out_file = open(lb_path, 'w')
      tree = ET.parse(in_file)
      root = tree.getroot()
      size = root.find('size')
      w = int(size.find('width').text)
      h = int(size.find('height').text)

      names = list(yaml['names'].values())  # names list
      for obj in root.iter('object'):
          cls = obj.find('name').text
          if cls in names and int(obj.find('difficult').text) != 1:
              xmlbox = obj.find('bndbox')
              bb = convert_box((w, h), [float(xmlbox.find(x).text) for x in ('xmin', 'xmax', 'ymin', 'ymax')])
              cls_id = names.index(cls)  # class id
              out_file.write(" ".join([str(a) for a in (cls_id, *bb)]) + '\n')


  # Download
  dir = Path(yaml['path'])  # dataset root dir
  url = 'https://github.com/ultralytics/yolov5/releases/download/v1.0/'
  urls = [f'{url}VOCtrainval_06-Nov-2007.zip',  # 446MB, 5012 images
          f'{url}VOCtest_06-Nov-2007.zip',  # 438MB, 4953 images
          f'{url}VOCtrainval_11-May-2012.zip']  # 1.95GB, 17126 images
  download(urls, dir=dir / 'images', delete=False, curl=True, threads=3)

  # Convert
  path = dir / 'images/VOCdevkit'
  for year, image_set in ('2012', 'train'), ('2012', 'val'), ('2007', 'train'), ('2007', 'val'), ('2007', 'test'):
      imgs_path = dir / 'images' / f'{image_set}{year}'
      lbs_path = dir / 'labels' / f'{image_set}{year}'
      imgs_path.mkdir(exist_ok=True, parents=True)
      lbs_path.mkdir(exist_ok=True, parents=True)

      with open(path / f'VOC{year}/ImageSets/Main/{image_set}.txt') as f:
          image_ids = f.read().strip().split()
      for id in tqdm(image_ids, desc=f'{image_set}{year}'):
          f = path / f'VOC{year}/JPEGImages/{id}.jpg'  # old img path
          lb_path = (lbs_path / f.name).with_suffix('.txt')  # new label path
          f.rename(imgs_path / f.name)  # move image
          convert_label(path, lb_path, year, id)  # convert labels to YOLO format
